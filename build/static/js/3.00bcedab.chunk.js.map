{"version":3,"sources":["components/Dialogs/hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateProfileStatus","ProfileInfo","profile","className","classes","profileImg","src","alt","describtionBlock","profileAva","photos","large","profileInfo","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","Preloader","Post","item","message","like","MyPosts","memo","postsElement","posts","map","post","key","id","postsBlock","AddNewPosrFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","MyPostsCantainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authtorized","history","push","getProfile","getProfileStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.00bcedab.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => {return {\n    isAuth: state.auth.isAuth\n } }\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            if(this.props.isAuth === false) return <Redirect to={'/login'}/>\n            return <Component { ...this.props} />\n        }\n    }\n     \n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n     \n    return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"describtionBlock\":\"ProfileInfo_describtionBlock__NVn2V\",\"profileImg\":\"ProfileInfo_profileImg__3mXT7\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","import React, {useState, useEffect} from 'react';\n\n\n\n const ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setEditMode(props.status)\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }; \n\n    const diactivateEditMode = () => {\n        setEditMode(false);\n        props.updateProfileStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n        \n    };\n   \n    \n   return ( \n       <div>\n           {!editMode && \n         <div>\n           <span onDoubleClick={ activateEditMode }>{props.status || `----`}</span>\n         </div>\n         }\n         {editMode &&\n         <div>\n           <input \n              autoFocus={true} \n              onChange={onStatusChange} \n              onBlur={ diactivateEditMode } \n              value={status}>\n            </input>\n         </div>\n          }\n       </div>\n   )\n    \n};\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\n\n\nconst ProfileInfo = (props) => {\n   if(!props.profile) {\n     return <Preloader />\n   }\n\n   return ( \n    <div>\n      <div>\n        <img className={classes.profileImg} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTNA4_AMnRYJ-J-VUt-LWFkLM2VQ8ZKhyaqYA&usqp=CAU\" alt='avatar'></img>\n      </div>\n      <div> <ProfileStatusWithHooks status={props.status} updateProfileStatus={props.updateProfileStatus}/> </div>\n      <div className={classes.describtionBlock}>\n        <img className={classes.profileAva} src={props.profile.photos.large} alt='You '></img>\n        <div className={classes.profileInfo}>\n          <div>{`О бо мне: ` + props.profile.aboutMe}</div>\n          <div>{props.profile.lookingForAJob ? `Ищу работу` : `Не ищу работу`}</div>\n          <div>{props.profile.lookingForAJobDescription}</div>\n          <div>{`Полное имя ` + props.profile.fullName}</div>\n        </div>    \n      </div>\n  </div>\n   )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\n\n\nconst Post = (props) => {\n   return (\n         <div className={classes.item}>\n           <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSxLkbtTa0kfmKizxJgqECQLdlt_xq1R2jEQQ&usqp=CAU' alt='ava'></img>\n           {props.message}\n           <div>\n            <span>like</span>\n            <span>{props.like}</span>\n\n           </div>\n         </div>\n   )\n}\n\nexport default Post;","import React from 'react';\nimport Post from './Post/Post.jsx'\nimport classes from './MyPosts.module.css';\nimport { Field, reduxForm } from 'redux-form'\n\n\nconst MyPosts = React.memo((props) => {\n  const postsElement = props.posts.map(post => <Post message={post.message} key={post.id}like={post.like}/>);\n  const onAddPost = (values) => {props.addPost(values.newPostText)};\n\n   return ( \n    <div className={classes.postsBlock}>\n     <h3>my post</h3> \n       \n       <div className={classes.posts}>\n         { postsElement }\n         <AddNewPosrFormRedux onSubmit={onAddPost}/>\n       </div>\n    </div>\n   )\n})\n\n\nlet AddNewPosrForm = (props) => {\n  return <form onSubmit={props.handleSubmit}>\n           <div>\n             <Field name={'newPostText'} component={'textarea'}/>\n           </div>\n           <div> \n               <button >add post</button>\n            </div> \n          </form>\n          }\n\n       let AddNewPosrFormRedux = reduxForm({ form: 'ProfileAddNewPosrForm' })(AddNewPosrForm)\n\nexport default MyPosts;","import {addPostActionCreator} from '../../../redux/profile-reduser'\nimport MyPosts from './MyPosts.jsx';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))},\n  }\n}\n\nconst MyPostsCantainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsCantainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport MyPostsCantainer from './MyPosts/MyPostsContainer';\n \n\nconst Profile = (props) => {\n   return ( \n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus}/>\n      <MyPostsCantainer />\n  </div>\n   )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {getProfile, getProfileStatus, updateProfileStatus} from '../../redux/profile-reduser'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../Dialogs/hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n \nclass ProfileContainer extends React.Component {\n   componentDidMount () {\n      \n      let userId = this.props.match.params.userId;\n      if(!userId) {\n         userId = this.props.authtorized;\n         if (!userId) {\n            this.props.history.push('/login');\n         }\n      }\n      this.props.getProfile(userId);\n      this.props.getProfileStatus(userId);\n   } \n   \nrender(){ \n   return <Profile { ...this.props} \n        profile={this.props.profile} \n        isAuth={this.props.isAuth}\n        status={this.props.status}\n        updateProfileStatus={this.props.updateProfileStatus}\n        />}\n}\n\n\nlet mapStateToProps = (state) => {return {\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authtorized: state.auth.userId,\n   isAuth: state.auth.isAuth,\n\n} }\n\n\n\n\n\nexport default compose(\n   connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }),\n   withRouter,\n   withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}