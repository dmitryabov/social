{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContIainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","classes","dialog","active","id","name","Message","message","Dialogs","newMessageElement","createRef","dialogs","dialogsItem","map","key","messages","onChange","text","current","value","updateMessageAction","ref","newMessageText","placeholder","onClick","addMessageAction","compose","messagePage","dispatch","action","updateMessageActionCreator","addMessageActionCreator"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,4B,sICIxIC,EAA6B,SAACC,GAAW,MAAO,CAChDC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAyB,IAAtBC,KAAKC,MAAMN,OAAyB,kBAAC,IAAD,CAAUO,GAAI,WAC9C,kBAACJ,EAAeE,KAAKC,WAJO,GACXE,IAAML,WAStC,OAFsCM,YAAQX,EAARW,CAAoCL,K,+FCL/DM,EARI,SAACJ,GAChB,OACA,yBAAKK,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC1C,kBAAC,IAAD,CAASP,GAAI,YAAcD,EAAMS,IAAKT,EAAMU,QCItCC,EAPC,SAACX,GACb,OACA,yBAAKK,UAAWC,IAAQM,SAAUZ,EAAMY,UCsC7BC,EArCC,SAACb,GACd,IAAMc,EAAoBZ,IAAMa,YAU/B,OACA,yBAAKV,UAAWC,IAAQU,SACpB,yBAAKX,UAAWC,IAAQW,aACrBjB,EAAMgB,QAAQE,KAAI,SAAAX,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMS,IAAKZ,EAAOE,GAAIA,GAAIF,EAAOE,SAEzF,yBAAKJ,UAAWC,IAAQc,UACrBpB,EAAMoB,SAASF,KAAI,SAAAN,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASO,IAAKP,EAAQH,QAC/E,6BACE,8BACEY,SAda,WACvB,IAAIC,EAAOR,EAAkBS,QAAQC,MACrCxB,EAAMyB,oBAAoBH,IAahBI,IAAKZ,EACLU,MAAOxB,EAAM2B,eACbC,YAAY,wBAIhB,6BACE,4BAAQC,QA1BI,WACnB7B,EAAM8B,qBAyBC,mB,wBCNGC,4BACb5B,aAtBoB,SAACV,GACrB,MAAO,CACLuB,QAASvB,EAAMuC,YAAYhB,QAC3BI,SAAU3B,EAAMuC,YAAYZ,SAC5BO,eAAgBlC,EAAMuC,YAAYL,mBAKb,SAACM,GACxB,MAAO,CACLR,oBAAqB,SAACH,GACpB,IAAIY,EAASC,YAA2Bb,GACxCW,EAASC,IACXJ,iBAAkB,WAChBG,EAASG,oBAQbxC,IAFamC,CAGblB","file":"static/js/4.c7e8f185.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\"};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => {return {\n    isAuth: state.auth.isAuth\n } }\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            if(this.props.isAuth === false) return <Redirect to={'/login'}/>\n            return <Component { ...this.props} />\n        }\n    }\n     \n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n     \n    return ConnectedAuthRedirectComponent\n}","import React from 'react';\nimport classes from '../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    return (\n    <div className={classes.dialog + ' ' + classes.active}>\n         <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink> \n    </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from '../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return (\n    <div className={classes.message}>{props.message}</div>\n    )\n}\n\n\nexport default Message;","import React from 'react';\nimport classes from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message';\n\n\n\nconst Dialogs = (props) => {\n   const newMessageElement = React.createRef();\n   const onAddMessage = () => {\n     props.addMessageAction()\n   };\n\n   const onMessageChange = () => {\n    let text = newMessageElement.current.value;\n    props.updateMessageAction(text)  \n  };\n\n    return (\n    <div className={classes.dialogs}>\n        <div className={classes.dialogsItem} >\n          {props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)}           \n        </div>\n        <div className={classes.messages}>\n          {props.messages.map(message => <Message message={message.message} key={message.id}/>)}\n          <div>\n            <textarea \n              onChange={onMessageChange} \n              ref={newMessageElement} \n              value={props.newMessageText}\n              placeholder='Enter your message'\n              >\n            </textarea>\n          </div>\n          <div>\n            <button onClick={onAddMessage}>add message</button>\n          </div>\n        </div>\n    </div>\n    )\n}\n\n\n\nexport default Dialogs;","import {addMessageActionCreator, updateMessageActionCreator} from '../../redux/message-reduser';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nimport { withAuthRedirect } from './hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogs: state.messagePage.dialogs,\n    messages: state.messagePage.messages,\n    newMessageText: state.messagePage.newMessageText,  \n  }\n}\n\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateMessageAction: (text) => {\n      let action = updateMessageActionCreator(text);\n      dispatch(action)},\n    addMessageAction: () => {\n      dispatch(addMessageActionCreator())\n    }\n  }\n}\n\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}